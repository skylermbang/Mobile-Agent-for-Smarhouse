{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww12800\viewh15240\viewkind0
\deftab720
\pard\pardeftab720\sl340\partightenfactor0

\f0\fs26\fsmilli13229 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \cb3 //zoomkat 12/26/12\cb1 \
\cb3 //SD server test code\cb1 \
\cb3 //open serial monitor to see what the arduino receives\cb1 \
\cb3 //address will look like http://192.168.1.102:84 when submited\cb1 \
\cb3 //for use with W5100 based ethernet shields\cb1 \
\
\cb3 #include <SD.h>\cb1 \
\cb3 #include <SPI.h>\cb1 \
\cb3 #include <Ethernet.h>\cb1 \
\
\cb3 byte mac[] = \{\'a0\cb1 \
\cb3 \'a0 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED \}; //physical mac address\cb1 \
\cb3 byte ip[] = \{\'a0\cb1 \
\cb3 \'a0 192, 168, 1, 102 \}; // ip in lan\cb1 \
\cb3 byte gateway[] = \{\'a0\cb1 \
\cb3 \'a0 192, 168, 1, 1 \}; // internet access via router\cb1 \
\cb3 byte subnet[] = \{\'a0\cb1 \
\cb3 \'a0 255, 255, 255, 0 \}; //subnet mask\cb1 \
\cb3 EthernetServer server(84); //server port\cb1 \
\cb3 String readString;\'a0\cb1 \
\
\cb3 //////////////////////\cb1 \
\
\cb3 void setup()\{\cb1 \
\
\cb3 \'a0 Serial.begin(9600);\cb1 \
\
\cb3 \'a0 // disable w5100 while setting up SD\cb1 \
\cb3 \'a0 pinMode(10,OUTPUT);\cb1 \
\cb3 \'a0 digitalWrite(10,HIGH);\cb1 \
\cb3 \'a0 Serial.print("Starting SD..");\cb1 \
\cb3 \'a0 if(!SD.begin(4)) Serial.println("failed");\cb1 \
\cb3 \'a0 else Serial.println("ok");\cb1 \
\
\cb3 \'a0 Ethernet.begin(mac, ip, gateway, gateway, subnet);\cb1 \
\cb3 \'a0 //delay(2000);\cb1 \
\cb3 \'a0 server.begin();\cb1 \
\cb3 \'a0 Serial.println("Ready");\cb1 \
\cb3 \}\cb1 \
\
\cb3 void loop()\{\cb1 \
\cb3 \'a0 // Create a client connection\cb1 \
\cb3 \'a0 EthernetClient client = server.available();\cb1 \
\cb3 \'a0 if (client) \{\cb1 \
\cb3 \'a0 \'a0 while (client.connected()) \{\cb1 \
\cb3 \'a0 \'a0 \'a0 if (client.available()) \{\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 char c = client.read();\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 //read char by char HTTP request\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 if (readString.length() < 100) \{\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //store characters to string\'a0\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 readString += c;\'a0\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //Serial.print(c);\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \}\'a0\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 //if HTTP request has ended\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 if (c == '\\n') \{\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 ///////////////\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 Serial.println(readString); //print to serial monitor for debuging\'a0\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 client.println("HTTP/1.1 200 OK"); //send new page\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //client.println("Content-Type: text/html");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 client.println("Content-Type: image/jpeg");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //client.println("Content-Type: image/gif");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //client.println("Content-Type: application/x-javascript");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //client.println("Content-Type: text");\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 client.println();\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //File myFile = SD.open("boom.htm");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 File myFile = SD.open("HYPNO.JPG");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //File myFile = SD.open("BLUEH_SL.GIF");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //File myFile = SD.open("SERVOSLD.HTM");\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 if (myFile) \{\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 byte clientBuf[64];\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 int clientCount = 0;\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 while(myFile.available())\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \{\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 clientBuf[clientCount] = myFile.read();\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 clientCount++;\cb1 \
\
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if(clientCount > 63)\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \{\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Serial.println("Packet");\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 client.write(clientBuf,64);\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 clientCount = 0;\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 //final <64 byte cleanup packet\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if(clientCount > 0) client.write(clientBuf,clientCount);\'a0 \'a0 \'a0 \'a0 \'a0 \'a0\'a0\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // close the file:\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 myFile.close();\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 delay(1);\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 //stopping client\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 client.stop();\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \'a0 readString="";\cb1 \
\cb3 \'a0 \'a0 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \'a0 \}\cb1 \
\cb3 \'a0 \}\'a0\cb1 \
\cb3 \}\cb1 \
\
}